{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leand\\\\OneDrive\\\\Documentos\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\n// import React, { useEffect, useState, ChangeEvent } from 'react';\n// import { Link } from \"react-router-dom\";\n// import { FiArrowLeft } from \"react-icons/fi\";\n// import { Map, Marker, TileLayer } from 'react-leaflet';\n// import { LeafletMouseEvent } from 'leaflet';\n// import api from \"../../services/api\";\n// import axios from 'axios';\n// import './styles.css';\n// import '../../responsive.css'\n// import '../../App.css'\n// import logo from '../../assets/logo.svg';\n// // array ou objeto: manualmente informar o tipo da variavel\n// interface Item {\n//   id: number;\n//   title: string;\n//   image_url: string;\n// }\n// interface IBGEUfResponse {\n//   sigla: string;\n// }\n// interface IBGECityResponse {\n//   nome: string;\n// }\n// const CreatePoint = () => {\n//   const [itens, setItens] = useState<Item[]>([]);\n//   const [ufs, setUfs] = useState<string[]>([]);\n//   const [cities, setCities] = useState<string[]>([]);\n//   const [selectedUf, setSelectedUf] = useState('0');\n//   const [selectedCity, setSelectedCity] = useState('0');\n//   useEffect(() => {\n//     api.get('itens').then(response => {\n//       setItens(response.data)\n//     })\n//   }, [])\n//   useEffect(() => {\n//     axios.get<IBGEUfResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n//       const ufInitials = response.data.map(uf => uf.sigla);\n//       setUfs(ufInitials);\n//     })\n//   }, []);\n//   useEffect(() => {\n//     if (selectedUf === '0') {\n//       return;\n//     }\n//     axios\n//       .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\n//       .then(response => {\n//         const cityNames = response.data.map(city => city.nome);\n//         setCities(cityNames);\n//       })\n//   }, [selectedUf]);\n//   function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>) {\n//     const uf = event.target.value;\n//     setSelectedUf(uf);\n//   }\n//   function handleSelectedCity(event: ChangeEvent<HTMLSelectElement>) {\n//     const city = event.target.value;\n//     setSelectedCity(city);\n//   }\n//   function handleMapClick(event: LeafletMouseEvent) {\n//     console.log(event.latlng)\n//   }\n//   return (\n//     <div id=\"page-create-point\">\n//       <header>\n//         <img src={logo} alt=\"Ecoleta\" />\n//         <Link className=\"linkkkk\" to=\"/\">\n//           <FiArrowLeft />\n//                     Voltar para Home\n//                 </Link>\n//       </header>\n//       <form>\n//         <h1>Cadastro do <br /> Ponto de Coleta</h1>\n//         <fieldset>\n//           <legend>\n//             <h2>Dados</h2>\n//           </legend>\n//           <div className=\"field\">\n//             <label htmlFor=\"name\">Nome da entidade</label>\n//             <input\n//               type=\"text\"\n//               name=\"name\"\n//               id=\"name\"\n//             />\n//           </div>\n//           <div className=\"field-group\">\n//             <label htmlFor=\"email\">E-mail</label>\n//             <input\n//               type=\"email\"\n//               name=\"email\"\n//               id=\"email\"\n//             />\n//           </div>\n//           <div className=\"field\">\n//             <label htmlFor=\"Whatsapp\">Whatsapp</label>\n//             <input\n//               type=\"text\"\n//               name=\"Whatsapp\"\n//               id=\"Whatsapp\"\n//             />\n//           </div>\n//         </fieldset>\n//         <fieldset>\n//           <legend>\n//             <h2>Endereço</h2>\n//             <span>Selecione o endereço no mapa</span>\n//           </legend>\n//           <div className=\"mapid\">\n//             <Map center={[-23.5381092, -46.468151]} zoom={13}>\n//               <TileLayer \n//                 attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n//               />\n//             </Map>\n//           </div>\n//           <div className=\"field-group\">\n//             <div className=\"field\">\n//               <label htmlFor=\"uf\">Estado (UF)</label>\n//               <select\n//                 name=\"uf\"\n//                 id=\"uf\"\n//                 value={selectedUf}\n//                 onChange={handleSelectedUf}>\n//                 <option value=\"0\">Selecione uma UF</option>\n//                 {ufs.map(uf => (\n//                   <option key={uf} value={uf}>{uf}</option>\n//                 ))}\n//               </select>\n//             </div>\n//             <div className=\"field\">\n//               <label htmlFor=\"uf\">Cidade</label>\n//               <select\n//                 name=\"city\"\n//                 id=\"city\"\n//                 onChange={handleSelectedCity}\n//               >\n//                 <option value=\"0\">Selecione uma cidade</option>\n//                 {cities.map(city => (\n//                   <option key={city} value={city}>{city}</option>\n//                 ))}\n//               </select>\n//             </div>\n//           </div>\n//         </fieldset>\n//         <fieldset>\n//           <legend>\n//             <h2>Ítens de Coleta</h2>\n//             <span>Selecione um ou mais ítens abaixo</span>\n//           </legend>\n//           <ul className=\"items-grid\">\n//             {itens.map(item => (\n//               <li key={item.id} className=\"selected\">\n//                 <img src={item.image_url} alt={item.title} />\n//                 <span>{item.title}</span>\n//               </li>\n//             ))}\n//           </ul>\n//         </fieldset>\n//         <button type=\"submit\">Cadastrar ponto de coleta</button>\n//       </form>\n//     </div>\n//   );\n// }\n// export default CreatePoint;\nimport React from 'react';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst center = {\n  lat: -3.745,\n  lng: -38.523\n};\n\nfunction MyComponent() {\n  return /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyBe38l5wO1OYHcQZBFQgHzvjMpwu3Qjbvs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null)));\n}\n\nexport default React.memo(MyComponent);","map":{"version":3,"sources":["C:/Users/leand/OneDrive/Documentos/web/src/pages/CreatePoint/index.tsx"],"names":["React","GoogleMap","LoadScript","containerStyle","width","height","center","lat","lng","MyComponent","memo"],"mappingskB,OAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,wBAAtC;AAEA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,KAAK,EAAE,OADc;AAErBC,EAAAA,MAAM,EAAE;AAFa,CAAvB;AAKA,MAAMC,MAAM,GAAG;AACbC,EAAAA,GAAG,EAAE,CAAC,KADO;AAEbC,EAAAA,GAAG,EAAE,CAAC;AAFO,CAAf;;AAKA,SAASC,WAAT,GAAuB;AACrB,sBACE,oBAAC,UAAD;AACE,IAAA,gBAAgB,EAAC,yCADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE,oBAAC,SAAD;AACE,IAAA,iBAAiB,EAAEN,cADrB;AAEE,IAAA,MAAM,EAAEG,MAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,yCANF,CAHF,CADF;AAcD;;AAED,eAAeN,KAAK,CAACU,IAAN,CAAWD,WAAX,CAAf","sourcesContent":["// import React, { useEffect, useState, ChangeEvent } from 'react';\r\n// import { Link } from \"react-router-dom\";\r\n// import { FiArrowLeft } from \"react-icons/fi\";\r\n// import { Map, Marker, TileLayer } from 'react-leaflet';\r\n// import { LeafletMouseEvent } from 'leaflet';\r\n// import api from \"../../services/api\";\r\n// import axios from 'axios';\r\n\r\n// import './styles.css';\r\n// import '../../responsive.css'\r\n// import '../../App.css'\r\n// import logo from '../../assets/logo.svg';\r\n\r\n// // array ou objeto: manualmente informar o tipo da variavel\r\n\r\n// interface Item {\r\n//   id: number;\r\n//   title: string;\r\n//   image_url: string;\r\n// }\r\n\r\n// interface IBGEUfResponse {\r\n//   sigla: string;\r\n// }\r\n\r\n// interface IBGECityResponse {\r\n//   nome: string;\r\n// }\r\n\r\n// const CreatePoint = () => {\r\n\r\n//   const [itens, setItens] = useState<Item[]>([]);\r\n//   const [ufs, setUfs] = useState<string[]>([]);\r\n//   const [cities, setCities] = useState<string[]>([]);\r\n\r\n//   const [selectedUf, setSelectedUf] = useState('0');\r\n//   const [selectedCity, setSelectedCity] = useState('0');\r\n\r\n//   useEffect(() => {\r\n//     api.get('itens').then(response => {\r\n//       setItens(response.data)\r\n//     })\r\n//   }, [])\r\n\r\n//   useEffect(() => {\r\n//     axios.get<IBGEUfResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n//       const ufInitials = response.data.map(uf => uf.sigla);\r\n//       setUfs(ufInitials);\r\n//     })\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     if (selectedUf === '0') {\r\n//       return;\r\n//     }\r\n//     axios\r\n//       .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n//       .then(response => {\r\n//         const cityNames = response.data.map(city => city.nome);\r\n//         setCities(cityNames);\r\n//       })\r\n//   }, [selectedUf]);\r\n\r\n//   function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>) {\r\n//     const uf = event.target.value;\r\n//     setSelectedUf(uf);\r\n//   }\r\n\r\n//   function handleSelectedCity(event: ChangeEvent<HTMLSelectElement>) {\r\n//     const city = event.target.value;\r\n//     setSelectedCity(city);\r\n//   }\r\n\r\n//   function handleMapClick(event: LeafletMouseEvent) {\r\n//     console.log(event.latlng)\r\n//   }\r\n\r\n//   return (\r\n//     <div id=\"page-create-point\">\r\n//       <header>\r\n//         <img src={logo} alt=\"Ecoleta\" />\r\n//         <Link className=\"linkkkk\" to=\"/\">\r\n//           <FiArrowLeft />\r\n//                     Voltar para Home\r\n//                 </Link>\r\n//       </header>\r\n\r\n//       <form>\r\n//         <h1>Cadastro do <br /> Ponto de Coleta</h1>\r\n//         <fieldset>\r\n//           <legend>\r\n//             <h2>Dados</h2>\r\n//           </legend>\r\n//           <div className=\"field\">\r\n//             <label htmlFor=\"name\">Nome da entidade</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               id=\"name\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"field-group\">\r\n//             <label htmlFor=\"email\">E-mail</label>\r\n//             <input\r\n//               type=\"email\"\r\n//               name=\"email\"\r\n//               id=\"email\"\r\n//             />\r\n//           </div>\r\n//           <div className=\"field\">\r\n//             <label htmlFor=\"Whatsapp\">Whatsapp</label>\r\n//             <input\r\n//               type=\"text\"\r\n//               name=\"Whatsapp\"\r\n//               id=\"Whatsapp\"\r\n//             />\r\n//           </div>\r\n//         </fieldset>\r\n//         <fieldset>\r\n//           <legend>\r\n//             <h2>Endereço</h2>\r\n//             <span>Selecione o endereço no mapa</span>\r\n//           </legend>\r\n//           <div className=\"mapid\">\r\n//             <Map center={[-23.5381092, -46.468151]} zoom={13}>\r\n//               <TileLayer \r\n//                 attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n//                 url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n//               />\r\n//             </Map>\r\n//           </div>\r\n\r\n//           <div className=\"field-group\">\r\n//             <div className=\"field\">\r\n//               <label htmlFor=\"uf\">Estado (UF)</label>\r\n//               <select\r\n//                 name=\"uf\"\r\n//                 id=\"uf\"\r\n//                 value={selectedUf}\r\n//                 onChange={handleSelectedUf}>\r\n//                 <option value=\"0\">Selecione uma UF</option>\r\n//                 {ufs.map(uf => (\r\n//                   <option key={uf} value={uf}>{uf}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//             <div className=\"field\">\r\n//               <label htmlFor=\"uf\">Cidade</label>\r\n//               <select\r\n//                 name=\"city\"\r\n//                 id=\"city\"\r\n//                 onChange={handleSelectedCity}\r\n//               >\r\n//                 <option value=\"0\">Selecione uma cidade</option>\r\n//                 {cities.map(city => (\r\n//                   <option key={city} value={city}>{city}</option>\r\n//                 ))}\r\n//               </select>\r\n//             </div>\r\n//           </div>\r\n//         </fieldset>\r\n//         <fieldset>\r\n//           <legend>\r\n//             <h2>Ítens de Coleta</h2>\r\n//             <span>Selecione um ou mais ítens abaixo</span>\r\n//           </legend>\r\n//           <ul className=\"items-grid\">\r\n//             {itens.map(item => (\r\n//               <li key={item.id} className=\"selected\">\r\n//                 <img src={item.image_url} alt={item.title} />\r\n//                 <span>{item.title}</span>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </fieldset>\r\n//         <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default CreatePoint;\r\nimport React from 'react'\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n  width: '400px',\r\n  height: '400px'\r\n};\r\n\r\nconst center = {\r\n  lat: -3.745,\r\n  lng: -38.523\r\n};\r\n\r\nfunction MyComponent() {\r\n  return (\r\n    <LoadScript\r\n      googleMapsApiKey=\"AIzaSyBe38l5wO1OYHcQZBFQgHzvjMpwu3Qjbvs\"\r\n    >\r\n      <GoogleMap\r\n        mapContainerStyle={containerStyle}\r\n        center={center}\r\n        zoom={10}\r\n      >\r\n        { /* Child components, such as markers, info windows, etc. */ }\r\n        <></>\r\n      </GoogleMap>\r\n    </LoadScript>\r\n  )\r\n}\r\n\r\nexport default React.memo(MyComponent)"]},"metadata":{},"sourceType":"module"}