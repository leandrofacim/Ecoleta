{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leand\\\\OneDrive\\\\Documentos\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FiArrowLeft } from \"react-icons/fi\";\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport api from \"../../services/api\";\nimport axios from 'axios';\nimport './styles.css';\nimport '../../responsive.css';\nimport '../../App.css';\nimport logo from \"../../assets/logo.svg\";\n\nconst CreatePoint = () => {\n  const [itens, setItens] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedUf, setSelectedUf] = useState('0');\n  const [selectedCity, setSelectedCity] = useState('0');\n  const [selectedItens, setSelectedItens] = useState([]);\n  const [selectedPosition, setSelectedPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  const [initialPosition, setInitialPosition] = useState({\n    latitude: 0,\n    longitude: 0\n  });\n  const containerStyle = {\n    width: '600px',\n    height: '400px',\n    margin: '10px'\n  };\n  const center = {\n    lat: -23.5381092,\n    lng: -46.468151\n  };\n  useEffect(() => {\n    api.get('itens').then(response => {\n      setItens(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    if (selectedUf === '0') {\n      return;\n    }\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUf]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setInitialPosition({\n        latitude,\n        longitude\n      });\n    });\n  }, []);\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  function handleSelectedUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  function handleSelectedCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  function handleMapClick(event) {\n    let lat = event.latLng.lat();\n    let lng = event.latLng.lng();\n    setSelectedPosition({\n      lat,\n      lng\n    });\n  }\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItens.findIndex(item => {\n      const itemFound = item === id;\n      return itemFound;\n    });\n\n    if (alreadySelected >= 0) {\n      const filteredItens = selectedItens.filter(item => {\n        const itemSelecionado = item != id;\n        return itemSelecionado;\n      });\n      setSelectedItens(filteredItens);\n    } else {\n      setSelectedItens([...selectedItens, id]);\n    }\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const {\n      name,\n      email,\n      whatsapp\n    } = formData;\n    const {\n      lat,\n      lng\n    } = selectedPosition;\n    const uf = selectedUf;\n    const city = selectedCity;\n    const itens = selectedItens;\n    const data = {\n      name,\n      email,\n      whatsapp,\n      uf,\n      city,\n      lat,\n      lng,\n      itens\n    };\n    await api.post('points', data);\n    alert('Ponto de coleta criado');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }), \"Voltar para Home\")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  }), \" Ponto de Coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, \"Nome da entidade\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }\n  }, \"E-mail\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"Whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, \"Whatsapp\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"Whatsapp\",\n    id: \"Whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(LoadScript, {\n    googleMapsApiKey: \"AIzaSyARHdF5iy5i8irGDvISCfimw1lJVvY3qBQ\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: center,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 14\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  }, \"Estado (UF)\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"uf\",\n    id: \"uf\",\n    value: selectedUf,\n    onChange: handleSelectedUf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  }, uf)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, \"Cidade\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"city\",\n    id: \"city\",\n    onChange: handleSelectedCity,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, \"Selecione uma cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, city)))))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"\\xCDtens de Coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }\n  }, \"Selecione um ou mais \\xEDtens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, itens.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    className: selectedItens.includes(item.id) ? 'selected' : '',\n    onClick: () => handleSelectItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, item.title))))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 9\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/Users/leand/OneDrive/Documentos/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","GoogleMap","LoadScript","Marker","api","axios","CreatePoint","itens","setItens","ufs","setUfs","cities","setCities","formData","setFormData","name","email","whatsapp","selectedUf","setSelectedUf","selectedCity","setSelectedCity","selectedItens","setSelectedItens","selectedPosition","setSelectedPosition","lat","lng","initialPosition","setInitialPosition","latitude","longitude","containerStyle","width","height","margin","center","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","navigator","geolocation","getCurrentPosition","position","console","log","coords","handleInputChange","event","value","target","handleSelectedUf","handleSelectedCity","handleMapClick","latLng","handleSelectItem","id","alreadySelected","findIndex","item","itemFound","filteredItens","filter","itemSelecionado","handleSubmit","preventDefault","post","alert","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\nimport api from \"../../services/api\";\r\nimport axios from 'axios';\r\n\r\nimport './styles.css';\r\nimport '../../responsive.css'\r\nimport '../../App.css'\r\nimport logo from '../../assets/logo.svg';\r\nimport { makeLoadScriptUrl } from '@react-google-maps/api/dist/utils/make-load-script-url';\r\n\r\n// array ou objeto: manualmente informar o tipo da variavel\r\n\r\ninterface Item {\r\n  id: number;\r\n  title: string;\r\n  image_url: string;\r\n}\r\n\r\ninterface IBGEUfResponse {\r\n  sigla: string;\r\n}\r\n\r\ninterface IBGECityResponse {\r\n  nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n\r\n  const [itens, setItens] = useState<Item[]>([]);\r\n  const [ufs, setUfs] = useState<string[]>([]);\r\n  const [cities, setCities] = useState<string[]>([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    whatsapp: ''\r\n  });\r\n\r\n  const [selectedUf, setSelectedUf] = useState('0');\r\n  const [selectedCity, setSelectedCity] = useState('0');\r\n  const [selectedItens, setSelectedItens] = useState<Number[]>([]);\r\n  const [selectedPosition, setSelectedPosition] = useState({lat: 0, lng:0});\r\n  const [initialPosition, setInitialPosition] = useState({latitude: 0, longitude: 0});\r\n\r\n  const containerStyle = {\r\n    width: '600px',\r\n    height: '400px',\r\n    margin: '10px',\r\n  };\r\n\r\n  const center = {\r\n    lat: -23.5381092,\r\n    lng: -46.468151\r\n  };\r\n \r\n  useEffect(() => {\r\n    api.get('itens').then(response => {\r\n      setItens(response.data)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    axios.get<IBGEUfResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\r\n      const ufInitials = response.data.map(uf => uf.sigla);\r\n      setUfs(ufInitials);\r\n    })\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedUf === '0') {\r\n      return;\r\n    }\r\n    axios\r\n      .get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`)\r\n      .then(response => {\r\n        const cityNames = response.data.map(city => city.nome);\r\n        setCities(cityNames);\r\n      })\r\n  }, [selectedUf]);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      console.log(position)\r\n      const { latitude, longitude} = position.coords;\r\n\r\n      setInitialPosition({latitude,longitude});\r\n    })\r\n  },[]);\r\n\r\n\r\n  function handleInputChange(event: ChangeEvent<HTMLInputElement>) {\r\n    const { name, value} = event.target;\r\n\r\n    setFormData({ ...formData, [name]: value})\r\n  }\r\n\r\n  function handleSelectedUf(event: ChangeEvent<HTMLSelectElement>) {\r\n    const uf = event.target.value;\r\n    setSelectedUf(uf);\r\n  }\r\n\r\n  function handleSelectedCity(event: ChangeEvent<HTMLSelectElement>) {\r\n    const city = event.target.value;\r\n    setSelectedCity(city);\r\n  }\r\n\r\n  function handleMapClick(event: google.maps.MouseEvent) {\r\n    let lat = event.latLng.lat();\r\n    let lng = event.latLng.lng();\r\n \r\n    setSelectedPosition({lat, lng});\r\n  }\r\n\r\n  function handleSelectItem(id: number) {\r\n    const alreadySelected = selectedItens.findIndex(item => {\r\n       const itemFound = item === id\r\n       return itemFound\r\n    });\r\n\r\n    if (alreadySelected >= 0) {\r\n      const filteredItens = selectedItens.filter(item => {\r\n        const itemSelecionado = item != id\r\n        return itemSelecionado\r\n      });\r\n      setSelectedItens(filteredItens);\r\n    } else {\r\n      setSelectedItens([...selectedItens, id]);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(event: FormEvent) {\r\n    event.preventDefault();\r\n\r\n    const { name, email, whatsapp} = formData;\r\n    const {lat, lng} = selectedPosition;\r\n    const uf = selectedUf;\r\n    const city = selectedCity;\r\n    const itens = selectedItens;\r\n\r\n    const data = {\r\n      name,\r\n      email,\r\n      whatsapp,\r\n      uf,\r\n      city,\r\n      lat,\r\n      lng,\r\n      itens\r\n    }\r\n\r\n    await api.post('points', data);\r\n\r\n    alert('Ponto de coleta criado');\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-create-point\">\r\n      <header>\r\n        <img src={logo} alt=\"Ecoleta\" />\r\n        <Link to=\"/\">\r\n          <FiArrowLeft />\r\n                    Voltar para Home\r\n                </Link>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Cadastro do <br /> Ponto de Coleta</h1>\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Dados</h2>\r\n          </legend>\r\n          <div className=\"field\">\r\n            <label htmlFor=\"name\">Nome da entidade</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"field-group\">\r\n            <label htmlFor=\"email\">E-mail</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              id=\"email\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"field\">\r\n            <label htmlFor=\"Whatsapp\">Whatsapp</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Whatsapp\"\r\n              id=\"Whatsapp\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Endereço</h2>\r\n            <span>Selecione o endereço no mapa</span>\r\n          </legend>\r\n          <LoadScript\r\n            googleMapsApiKey=\"AIzaSyARHdF5iy5i8irGDvISCfimw1lJVvY3qBQ\"\r\n          >\r\n            <GoogleMap\r\n              mapContainerStyle={containerStyle}\r\n              center={center}\r\n              zoom={15}\r\n              onClick={handleMapClick} \r\n            >\r\n            {<Marker position={selectedPosition} />}\r\n            \r\n            </GoogleMap>\r\n          </LoadScript>\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Estado (UF)</label>\r\n              <select\r\n                name=\"uf\"\r\n                id=\"uf\"\r\n                value={selectedUf}\r\n                onChange={handleSelectedUf}>\r\n                <option value=\"0\">Selecione uma UF</option>\r\n                {ufs.map(uf => (\r\n                  <option key={uf} value={uf}>{uf}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Cidade</label>\r\n              <select\r\n                name=\"city\"\r\n                id=\"city\"\r\n                onChange={handleSelectedCity}\r\n              >\r\n                <option value=\"0\">Selecione uma cidade</option>\r\n                {cities.map(city => (\r\n                  <option key={city} value={city}>{city}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Ítens de Coleta</h2>\r\n            <span>Selecione um ou mais ítens abaixo</span>\r\n          </legend>\r\n          <ul className=\"items-grid\">\r\n            {itens.map(item => (\r\n              <li \r\n                key={item.id} \r\n                className={selectedItens.includes(item.id) ? 'selected' : ''} \r\n                onClick={() => handleSelectItem(item.id)}\r\n              >\r\n                <img src={item.image_url} alt={item.title} />\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </fieldset>\r\n        <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePoint;\r\n"]},"metadata":{},"sourceType":"module"}